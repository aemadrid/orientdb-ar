#!/usr/bin/env jruby
require File.expand_path(File.dirname(__FILE__) + "/../lib/orientdb-ar")

if ARGV.include?('test:db')
  GEM_ROOT     = File.expand_path(File.join(File.dirname(__FILE__), '..'))
  SPEC_ROOT    = GEM_ROOT + '/spec'
  TEMP_DIR     = File.expand_path Dir.pwd + '/tmp'

  TEST_DB_PATH = "#{TEMP_DIR}/databases/db_#{rand(999) + 1}"

  puts ">> GEM_ROOT     : #{GEM_ROOT}"
  puts ">> TEST_DB PATH : #{TEST_DB_PATH}"

  require 'rspec'
  require 'fileutils'
  puts ">> Removing tmp directory #{TEMP_DIR} ..."
  FileUtils.remove_dir TEMP_DIR + '/databases', true
  puts ">> Creating OrientDB test database ..."
  FileUtils.mkdir_p TEST_DB_PATH
  OrientDB::AR::Base.connection = OrientDB::DocumentDatabase.new("local:#{TEST_DB_PATH}/test").create
  DB = OrientDB::AR::Base.connection
  puts ">> Connection : #{OrientDB::AR::Base.connection}"

  def remove_constant(const) #:nodoc:
    names = const.to_s.sub(/^::(Object)?/, 'Object::').split("::")
    to_remove = names.pop
    parent = names.join('::').constantize
    parent.instance_eval { remove_const to_remove }
    true
  end

  def load_models
    %w{ person simple_person address phone_number customer flo_admin product invoice_line invoice }.each do |name|
      klass_name = name.camelize
      klass_name = "Flo::Admin" if klass_name == "FloAdmin"
      klass = klass_name.constantize rescue nil
      if klass
        puts ">> Removing class #{klass} ..."
        remove_constant klass
      end
      puts ">> Loading #{klass_name} ..."
      load SPEC_ROOT + '/models/' + name + '.rb'
    end
  end

  load_models
end

require 'irb'
ARGV.clear
IRB.start(__FILE__)